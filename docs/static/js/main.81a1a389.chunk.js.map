{"version":3,"sources":["components/AddCategory.jsx","helpers/getGifs.js","components/GifGridItem.jsx","components/GifGrid.jsx","hooks/useFetchGifs.js","GifExpertApp.jsx","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","console","log","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2MAIaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAiB9C,OAEE,0BAAMC,SAZa,SAACC,GACpBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,OAQd,2BACEO,KAAK,OACLC,MAAOT,EACPU,SAnBoB,SAACP,GACzBF,EAAcE,EAAEQ,OAAOF,Y,uBCHbG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,sEAGZC,EAHY,0DAGgDC,UAAUH,GAH1D,sDAIGI,MAAMF,GAJT,cAIZG,EAJY,gBAKGA,EAAKC,OALR,uBAKXC,EALW,EAKXA,KAEDC,EAASD,EAAKE,KAAI,SAAAC,GAAO,IAAD,EAC5B,MAAO,CACLC,GAASD,EAAIC,GACbC,MAASF,EAAIE,MACbV,IAAG,UAAMQ,EAAIG,cAAV,aAAM,EAAYC,iBAAiBZ,QAXxB,kBAeXM,GAfW,kCAiBlBO,QAAQC,IAAR,MAjBkB,0DAAH,sDCaNC,EAhBK,SAAC,GAAqB,EAApBN,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAE/B,OACE,yBAAKgB,UAAU,0CACb,yBAAKC,IAAKjB,EAAKkB,IAAKR,IACpB,2BAAIA,KC0BKS,EA3BC,SAAC,GAAe,IAAdrB,EAAa,EAAbA,SAAa,ECHH,SAACA,GAAc,IAAD,EACdd,mBAAS,CACjCqB,KAAK,GACLe,SAAS,IAH6B,mBACjCC,EADiC,KAC1BC,EAD0B,KAsBxC,OAhBAC,qBAAU,WAER1B,EAAQC,GACL0B,MAAK,SAAAC,GAEJH,EAAS,CACPjB,KAAMoB,EACNL,SAAU,SAKf,CAACtB,IAIGuB,EDjBwBK,CAAa5B,GAAhCa,EAFiB,EAEtBN,KAAae,EAFS,EAETA,QAGpB,OACE,oCACE,wBAAIJ,UAAU,qCAAqClB,GAClDsB,GAAW,sCACZ,yBAAKJ,UAAU,aAEXL,EAAOJ,KAAI,SAAAC,GAAG,OACZ,kBAAC,EAAD,eACEmB,IAAKnB,EAAIC,IACLD,UEjBLoB,EAAe,WAAM,MAGI5C,mBAAS,CAAC,cAHd,mBAGzB6C,EAHyB,KAGb9C,EAHa,KAWhC,OACI,oCACE,4CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BACA,4BAEI8C,EAAWtB,KAAI,SAAAT,GACb,OAAO,kBAAC,EAAD,CAASA,SAAUA,EAAU6B,IAAK7B,U,MChBvDgC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.81a1a389.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n  const [inputValue, setInputValue] = useState('');\r\n\r\n  const handleInputChange = (e) =>{\r\n    setInputValue(e.target.value)\r\n  }\r\n  const handleSubmit = (e) =>{\r\n    e.preventDefault();\r\n\r\n    if(inputValue.trim().length > 2){\r\n      setCategories(cats => [inputValue, ...cats]);\r\n      setInputValue('');\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n\r\n    <form onSubmit={handleSubmit}>\r\n      <input \r\n        type=\"text\"\r\n        value={inputValue}\r\n        onChange={handleInputChange}\r\n      />\r\n    </form>\r\n\r\n  )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n  setCategories : PropTypes.func.isRequired,\r\n}\r\n","\r\n\r\n\r\n\r\n\r\n\r\n export const getGifs = async (category) =>{\r\n\r\n    try {\r\n      const url    = `https://api.giphy.com/v1/gifs/search?limit=10&q=${encodeURI(category)}&api_key=9hK5ZW01CjEy0LeN0PiezJE6ZxgScQu0`;\r\n      const resp   = await fetch(url);\r\n      const {data} = await resp.json();\r\n      //constuyendo un array de objetos con la forma que quiero\r\n      const gifs   = data.map(img =>{\r\n        return {\r\n          id    :  img.id,\r\n          title :  img.title,\r\n          url   :  img.images?.downsized_medium.url,//signo de interrogacion significa que si vienen las imagenes que las use, sino no\r\n        }\r\n      })\r\n\r\n      return gifs;\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }","import React from 'react'\r\n//import PropTypes from 'prop-types'\r\n\r\nconst GifGridItem = ({id, title, url}) => {\r\n\r\n  return (\r\n    <div className=\"card animate__animated animate__bounce\">\r\n      <img src={url} alt={title}/>\r\n      <p>{title}</p>\r\n    </div>\r\n  )\r\n}\r\n\r\n/* GitGridItem.propTypes = {\r\n   id : PropTypes.string.isRequired,\r\n  title : PropTypes.string.isRequired,\r\n  url : PropTypes.string.isRequired, \r\n} */\r\n\r\nexport default GifGridItem;\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport GifGridItem from './GifGridItem';\r\n//import PropTypes from 'prop-types';\r\n\r\n\r\n\r\nconst GifGrid = ({category})=> {\r\n\r\n  const {data:images, loading} = useFetchGifs(category);\r\n\r\n\r\n  return (\r\n    <>\r\n      <h3 className=\"animate__animated animate__bounce\">{category}</h3>\r\n      {loading && <p>Loading</p> }\r\n      <div className=\"card-grid\">\r\n        {\r\n          images.map(img =>(\r\n            <GifGridItem\r\n              key={img.id}\r\n              {...img}\r\n            />\r\n          ))\r\n        }\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\n/* GifGrid.propTypes = {\r\n  category : PropTypes.string.isRequired,\r\n} */\r\n\r\nexport default GifGrid\r\n","import {useState, useEffect} from 'react';\r\nimport {getGifs} from '../helpers/getGifs';\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n  const [state, setState] = useState({\r\n    data:[],\r\n    loading: true\r\n  })\r\n\r\n  useEffect(() => {\r\n\r\n    getGifs(category)\r\n      .then(imgs =>{\r\n\r\n        setState({\r\n          data: imgs,\r\n          loading : false\r\n        })\r\n\r\n      })\r\n\r\n  }, [category]);\r\n  \r\n\r\n\r\n  return state;\r\n\r\n}\r\n","import React,{useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n  //const categories = ['One Punch', 'Samurai X', 'Dragon Ball']\r\n  const [categories, setCategories] = useState(['One Punch']);\r\n\r\n\r\n/*   const handledAdd = (e) =>{\r\n    //setCategories([...categories, 'Inuyasha']) forma 1\r\n    //setCategories(anime => [...categories, 'Inuyasha']); //forma 2\r\n    setCategories(['Inuyasha', ...categories ])\r\n  }  */\r\n  return (\r\n      <>\r\n        <h2>GifExperfApp</h2>\r\n        <AddCategory setCategories={setCategories}/>\r\n        <hr/>\r\n        <ol>\r\n          {\r\n            categories.map(category =>{\r\n              return <GifGrid category={category} key={category}/>\r\n            })\r\n          }\r\n        </ol>\r\n      </>\r\n  )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\n\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}